import sympy as sp

# 1. Definisikan Variabel Simbolik
t, s = sp.symbols('t s')  # Variabel waktu dan Laplace
V, I, omega = sp.Function('V')(t), sp.Function('i')(t), sp.Function('omega')(t)  # Fungsi dalam domain waktu

# Parameter Motor DC
R, L, J, B, Ke, Kt = sp.symbols('R L J B Ke Kt')

# 2. Model Matematika Motor DC
# Persamaan GGL Balik dalam Domain Waktu
Eb_t = Ke * omega
print("\nPersamaan GGL Balik pada Domain Waktu:")
sp.pprint(Eb_t)

# Persamaan Listrik dalam Domain Waktu
eq_listrik = sp.Eq(V, Ke * omega + L * sp.diff(I, t) + R * I)
print("\nPersamaan Listrik pada Domain Waktu:")
sp.pprint(eq_listrik)

# Persamaan Mekanik dalam Domain Waktu
eq_mekanik = sp.Eq(Kt * I, B * omega + J * sp.diff(omega, t))
print("\nPersamaan Mekanik pada Domain Waktu:")
sp.pprint(eq_mekanik)

# 3. Transformasi Laplace
V_s, I_s, omega_s = sp.Function('V')(s), sp.Function('i')(s), sp.Function('omega')(s)

# Transformasi Laplace dari Persamaan Listrik
eq_listrik_s = sp.Eq(V_s, Ke * omega_s + R * I_s)
print("\nPersamaan Listrik dalam Domain Laplace:")
sp.pprint(eq_listrik_s)

# Transformasi Laplace dari Persamaan Mekanik
eq_mekanik_s = sp.Eq(Kt * I_s, B * omega_s + J * s * omega_s)
print("\nPersamaan Mekanik dalam Domain Laplace:")
sp.pprint(eq_mekanik_s)

# 4. Menentukan i(s) dan Mensubstitusikannya
i_s_ = sp.solve(eq_mekanik_s, I_s)[0]
print("\nNilai i(s) dari Persamaan Mekanik:")
sp.pprint(sp.Eq(I_s, i_s_))

# Substitusi i(s) ke dalam Persamaan Listrik
eq_listrik_subs = eq_listrik_s.subs(I_s, i_s_)
print("\nPersamaan Listrik Setelah Substitusi i(s):")
sp.pprint(eq_listrik_subs)

# 5. Menentukan Fungsi Alih G(s) = Omega(s) / V(s)
V_s_rhs = eq_listrik_subs.rhs
G_s = sp.simplify(omega_s / V_s_rhs)
print("\nFungsi Alih G(s) = Omega(s) / V(s):")
sp.pprint(sp.Eq(sp.Function('H')(s), G_s))
